diff --git a/src/main/java/org/apache/commons/codec/digest/MurmurHash3.java b/src/main/java/org/apache/commons/codec/digest/MurmurHash3.java
index ba73ef66..d6f45c1a 100644
--- a/src/main/java/org/apache/commons/codec/digest/MurmurHash3.java
+++ b/src/main/java/org/apache/commons/codec/digest/MurmurHash3.java
@@ -800,12 +800,9 @@ public final class MurmurHash3 {
     @Deprecated
     public static long[] hash128(final byte[] data, final int offset, final int length, final int seed) {
         // ************
-        // Note: This deliberately fails to apply masking using 0xffffffffL to the seed
-        // to maintain behavioural compatibility with the original version.
-        // The implicit conversion to a long will extend a negative sign
-        // bit through the upper 32-bits of the long seed. These should be zero.
+        // Note: This fails to apply masking using 0xffffffffL to the seed.
         // ************
-        return hash128x64Internal(data, offset, length, seed);
+        return hash128x64(data, offset, length, seed);
     }
 
     /**
@@ -823,7 +820,7 @@ public final class MurmurHash3 {
      */
     public static long[] hash128x64(final byte[] data, final int offset, final int length, final int seed) {
         // Use an unsigned 32-bit integer as the seed
-        return hash128x64Internal(data, offset, length, seed & 0xffffffffL);
+        return hash128x64(data, offset, length, seed & 0xffffffffL);
     }
 
     /**
@@ -838,7 +835,7 @@ public final class MurmurHash3 {
      * @param seed The initial seed value
      * @return The 128-bit hash (2 longs)
      */
-    private static long[] hash128x64Internal(final byte[] data, final int offset, final int length, final long seed) {
+    private static long[] hash128x64(final byte[] data, final int offset, final int length, final long seed) {
         long h1 = seed;
         long h2 = seed;
         final int nblocks = length >> 4;
