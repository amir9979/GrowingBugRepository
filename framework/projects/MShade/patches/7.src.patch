diff --git a/src/main/java/org/apache/maven/plugins/shade/relocation/SimpleRelocator.java b/src/main/java/org/apache/maven/plugins/shade/relocation/SimpleRelocator.java
index 198eeed..77e42b0 100644
--- a/src/main/java/org/apache/maven/plugins/shade/relocation/SimpleRelocator.java
+++ b/src/main/java/org/apache/maven/plugins/shade/relocation/SimpleRelocator.java
@@ -19,8 +19,6 @@ package org.apache.maven.plugins.shade.relocation;
  * under the License.
  */
 
-import org.codehaus.plexus.util.SelectorUtils;
-
 import java.util.Collection;
 import java.util.Iterator;
 import java.util.LinkedHashSet;
@@ -28,6 +26,8 @@ import java.util.List;
 import java.util.Set;
 import java.util.regex.Pattern;
 
+import org.codehaus.plexus.util.SelectorUtils;
+
 /**
  * @author Jason van Zyl
  * @author Mauro Talevi
@@ -47,18 +47,18 @@ public class SimpleRelocator
     private final Set includes;
 
     private final Set excludes;
-
+    
     private final boolean rawString;
 
     public SimpleRelocator( String patt, String shadedPattern, List includes, List excludes )
     {
         this( patt, shadedPattern, includes, excludes, false );
     }
-
+    
     public SimpleRelocator( String patt, String shadedPattern, List includes, List excludes, boolean rawString )
     {
         this.rawString = rawString;
-
+        
         if ( rawString )
         {
             this.pathPattern = patt;
@@ -69,16 +69,8 @@ public class SimpleRelocator
         }
         else
         {
-            if ( patt == null )
-            {
-                this.pattern = "";
-                this.pathPattern = "";
-            }
-            else
-            {
-                this.pattern = patt.replace( '/', '.' );
-                this.pathPattern = patt.replace( '.', '/' );
-            }
+            this.pattern = patt.replace( '/', '.' );
+            this.pathPattern = patt.replace( '.', '/' );
 
             if ( shadedPattern != null )
             {
@@ -164,7 +156,7 @@ public class SimpleRelocator
         {
             return Pattern.compile( pathPattern ).matcher( path ).find();
         }
-
+        
         if ( path.endsWith( ".class" ) )
         {
             path = path.substring( 0, path.length() - 6 );
