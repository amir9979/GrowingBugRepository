diff --git a/src/org/apache/xml/security/signature/XMLSignature.java b/src/org/apache/xml/security/signature/XMLSignature.java
index 47d7f447..8119f14d 100644
--- a/src/org/apache/xml/security/signature/XMLSignature.java
+++ b/src/org/apache/xml/security/signature/XMLSignature.java
@@ -199,7 +199,7 @@ private Element signatureValueElement;
 
       String xmlnsDsPrefix = 
          getDefaultPrefixBindings(Constants.SignatureSpecNS);
-      if (xmlnsDsPrefix == null) {
+      if (xmlnsDsPrefix == null || xmlnsDsPrefix.length() == 0) {
          this._constructionElement.setAttributeNS
 	    (Constants.NamespaceSpecNS, "xmlns", Constants.SignatureSpecNS);
       } else {
@@ -240,7 +240,7 @@ private Element signatureValueElement;
 
       String xmlnsDsPrefix = 
          getDefaultPrefixBindings(Constants.SignatureSpecNS);
-      if (xmlnsDsPrefix == null) {
+      if (xmlnsDsPrefix == null || xmlnsDsPrefix.length() == 0) {
          this._constructionElement.setAttributeNS
 	    (Constants.NamespaceSpecNS, "xmlns", Constants.SignatureSpecNS);
       } else {
diff --git a/src/org/apache/xml/security/utils/ElementProxy.java b/src/org/apache/xml/security/utils/ElementProxy.java
index 02ee8bfe..f3394a49 100644
--- a/src/org/apache/xml/security/utils/ElementProxy.java
+++ b/src/org/apache/xml/security/utils/ElementProxy.java
@@ -492,47 +492,49 @@ public abstract class ElementProxy {
    static HashMap _prefixMappings = new HashMap();
    static HashMap _prefixMappingsBindings = new HashMap();
 
-    /**
-     * Method setDefaultPrefix
-     *
-     * @param namespace
-     * @param prefix
-     * @throws XMLSecurityException
-     */
-    public static void setDefaultPrefix(String namespace, String prefix)
-        throws XMLSecurityException {
+   /**
+    * Method setDefaultPrefix
+    *
+    * @param namespace
+    * @param prefix
+    * @throws XMLSecurityException
+    */
+   public static void setDefaultPrefix(String namespace, String prefix)
+           throws XMLSecurityException {
     
-	if (ElementProxy._prefixMappings.containsValue(prefix)) {
+   	if (ElementProxy._prefixMappings.containsValue(prefix)) {
         
-	    Object storedNamespace=ElementProxy._prefixMappings.get(namespace);
-            if (!storedNamespace.equals(prefix)) {
+   		Object storedNamespace=ElementProxy._prefixMappings.get(namespace);
+         if (!storedNamespace.equals(prefix)) {
          	Object exArgs[] = { prefix, namespace, storedNamespace };
 
          	throw new XMLSecurityException("prefix.AlreadyAssigned", exArgs);
-            }
-        }
+         }
+    }
    	if (Constants.SignatureSpecNS.equals(namespace)) {
-   	    XMLUtils.dsPrefix=prefix;
+   		XMLUtils.dsPrefix=prefix;
+   		XMLUtils.xmlnsDsPrefix="xmlns:"+prefix;
    	}
-        ElementProxy._prefixMappings.put(namespace, prefix.intern());
-	if (prefix.length() == 0) {
-            ElementProxy._prefixMappingsBindings.put(namespace, "xmlns");
-	} else {
-            ElementProxy._prefixMappingsBindings.put(namespace, ("xmlns:"+prefix).intern());
-	}
+      ElementProxy._prefixMappings.put(namespace, prefix.intern());
+      ElementProxy._prefixMappingsBindings.put(namespace, ("xmlns:"+prefix).intern());
    }
 
-    /**
-     * Method getDefaultPrefix
-     *
-     * @param namespace
-     * @return the default prefix bind to this element.
-     */
-    public static String getDefaultPrefix(String namespace) {
-        return (String) ElementProxy._prefixMappings.get(namespace);
-    }
+   /**
+    * Method getDefaultPrefix
+    *
+    * @param namespace
+    * @return the default prefix bind to this element.
+    */
+   public static String getDefaultPrefix(String namespace) {
 
-    public static String getDefaultPrefixBindings(String namespace) {
-	return (String) ElementProxy._prefixMappingsBindings.get(namespace);
-    }
+      String prefix = (String) ElementProxy._prefixMappings.get(namespace);
+
+      return prefix;
+   }
+   public static  String getDefaultPrefixBindings(String namespace) {
+
+	      String prefix = (String) ElementProxy._prefixMappingsBindings.get(namespace);
+
+	      return prefix;
+	   }
 }
diff --git a/src/org/apache/xml/security/utils/XMLUtils.java b/src/org/apache/xml/security/utils/XMLUtils.java
index a2d2fe27..e3c22284 100644
--- a/src/org/apache/xml/security/utils/XMLUtils.java
+++ b/src/org/apache/xml/security/utils/XMLUtils.java
@@ -227,6 +227,7 @@ public class XMLUtils {
 
 
    static  String dsPrefix=null;
+   static String xmlnsDsPrefix=null;
    static Map namePrefixes=new HashMap();
    /**
     * Creates an Element in the XML Signature specification namespace.
diff --git a/src/org/jcp/xml/dsig/internal/dom/DOMExcC14NMethod.java b/src/org/jcp/xml/dsig/internal/dom/DOMExcC14NMethod.java
index 11d5e793..4d286fb4 100644
--- a/src/org/jcp/xml/dsig/internal/dom/DOMExcC14NMethod.java
+++ b/src/org/jcp/xml/dsig/internal/dom/DOMExcC14NMethod.java
@@ -99,7 +99,7 @@ public final class DOMExcC14NMethod extends ApacheCanonicalizer {
         Element excElem = DOMUtils.createElement
 	    (ownerDoc, "InclusiveNamespaces", 
 	     CanonicalizationMethod.EXCLUSIVE, prefix);
-	if (prefix == null || prefix.length() == 0) {
+	if (prefix == null) {
 	    excElem.setAttributeNS("http://www.w3.org/2000/xmlns/", "xmlns",
 	        CanonicalizationMethod.EXCLUSIVE);
 	} else {
diff --git a/src/org/jcp/xml/dsig/internal/dom/DOMKeyInfo.java b/src/org/jcp/xml/dsig/internal/dom/DOMKeyInfo.java
index c13ae7e8..37528a16 100644
--- a/src/org/jcp/xml/dsig/internal/dom/DOMKeyInfo.java
+++ b/src/org/jcp/xml/dsig/internal/dom/DOMKeyInfo.java
@@ -138,7 +138,7 @@ public final class DOMKeyInfo extends DOMStructure implements KeyInfo {
         Element kiElem = DOMUtils.createElement
             (DOMUtils.getOwnerDocument(pNode), "KeyInfo",
              XMLSignature.XMLNS, dsPrefix);
-        if (dsPrefix == null || dsPrefix.length() == 0) {
+        if (dsPrefix == null) {
             kiElem.setAttributeNS
                 ("http://www.w3.org/2000/xmlns/", "xmlns", XMLSignature.XMLNS);
         } else {
diff --git a/src/org/jcp/xml/dsig/internal/dom/DOMUtils.java b/src/org/jcp/xml/dsig/internal/dom/DOMUtils.java
index 4b85909c..cd39e7ba 100644
--- a/src/org/jcp/xml/dsig/internal/dom/DOMUtils.java
+++ b/src/org/jcp/xml/dsig/internal/dom/DOMUtils.java
@@ -72,8 +72,7 @@ public class DOMUtils {
      */
     public static Element createElement(Document doc, String tag, String nsURI,
 	String prefix) {
-        String qName = (prefix == null || prefix.length() == 0)
-		       ? tag : prefix + ":" + tag;
+        String qName = prefix == null ? tag : prefix + ":" + tag;
         return doc.createElementNS(nsURI, qName);
     }
 
diff --git a/src/org/jcp/xml/dsig/internal/dom/DOMXMLSignature.java b/src/org/jcp/xml/dsig/internal/dom/DOMXMLSignature.java
index 1e0f3ccb..52bf7271 100644
--- a/src/org/jcp/xml/dsig/internal/dom/DOMXMLSignature.java
+++ b/src/org/jcp/xml/dsig/internal/dom/DOMXMLSignature.java
@@ -197,7 +197,9 @@ public final class DOMXMLSignature extends DOMStructure
             (ownerDoc, "Signature", XMLSignature.XMLNS, dsPrefix);
 
         // append xmlns attribute
-        if (dsPrefix == null || dsPrefix.length() == 0) {
+        //XXX I think this is supposed to be automatically inserted when
+        //XXX serializing a DOM2 tree, but doesn't seem to work with JAXP/Xalan
+        if (dsPrefix == null) {
             sigElem.setAttributeNS
 		("http://www.w3.org/2000/xmlns/", "xmlns", XMLSignature.XMLNS);
         } else {
diff --git a/src/org/jcp/xml/dsig/internal/dom/DOMXPathFilter2Transform.java b/src/org/jcp/xml/dsig/internal/dom/DOMXPathFilter2Transform.java
index 0cd05312..66fea4b1 100644
--- a/src/org/jcp/xml/dsig/internal/dom/DOMXPathFilter2Transform.java
+++ b/src/org/jcp/xml/dsig/internal/dom/DOMXPathFilter2Transform.java
@@ -123,8 +123,7 @@ public final class DOMXPathFilter2Transform extends ApacheTransform {
 	XPathFilter2ParameterSpec xp = 
 	    (XPathFilter2ParameterSpec) getParameterSpec();
         String prefix = DOMUtils.getNSPrefix(context, Transform.XPATH2);
-	String qname = (prefix == null || prefix.length() == 0) 
-		       ? "xmlns" : "xmlns:" + prefix;
+	String qname = (prefix == null) ? "xmlns" : "xmlns:" + prefix;
 	List list = xp.getXPathList();
 	for (int i = 0, size = list.size(); i < size; i++) {
             XPathType xpathType = (XPathType) list.get(i);
