diff --git a/src/main/java/org/apache/commons/net/ftp/FTPClient.java b/src/main/java/org/apache/commons/net/ftp/FTPClient.java
index f75796c2..cd641eb0 100644
--- a/src/main/java/org/apache/commons/net/ftp/FTPClient.java
+++ b/src/main/java/org/apache/commons/net/ftp/FTPClient.java
@@ -1279,7 +1279,7 @@ implements Configurable
         input = new BufferedInputStream(socket.getInputStream(),
                                         getBufferSize());
         if (__fileType == ASCII_FILE_TYPE)
-          input = new FromNetASCIIInputStream(input);
+          input = new FromNetASCIIInputStream(input, getControlEncoding());
         // Treat everything else as binary for now
         try
         {
@@ -1344,7 +1344,7 @@ implements Configurable
           // for file types other than ASCII.
           input = new BufferedInputStream(input,
                                           getBufferSize());
-          input = new FromNetASCIIInputStream(input);
+          input = new FromNetASCIIInputStream(input, getControlEncoding());
         }
         return new org.apache.commons.net.io.SocketInputStream(socket, input);
     }
diff --git a/src/main/java/org/apache/commons/net/io/FromNetASCIIInputStream.java b/src/main/java/org/apache/commons/net/io/FromNetASCIIInputStream.java
index fd3fd0e5..6039651a 100644
--- a/src/main/java/org/apache/commons/net/io/FromNetASCIIInputStream.java
+++ b/src/main/java/org/apache/commons/net/io/FromNetASCIIInputStream.java
@@ -20,6 +20,8 @@ package org.apache.commons.net.io;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.PushbackInputStream;
+import java.io.UnsupportedEncodingException;
+import java.nio.charset.Charset;
 
 /***
  * This class wraps an input stream, replacing all occurrences
@@ -36,12 +38,11 @@ public final class FromNetASCIIInputStream extends PushbackInputStream
 {
     static final boolean _noConversionRequired;
     static final String _lineSeparator;
-    static final byte[] _lineSeparatorBytes;
+    static byte[] _lineSeparatorBytes;
 
     static {
         _lineSeparator = System.getProperty("line.separator");
         _noConversionRequired = _lineSeparator.equals("\r\n");
-        _lineSeparatorBytes = _lineSeparator.getBytes();
     }
 
     private int __length = 0;
@@ -63,13 +64,28 @@ public final class FromNetASCIIInputStream extends PushbackInputStream
     /***
      * Creates a FromNetASCIIInputStream instance that wraps an existing
      * InputStream.
+     * @param input The {@link InputStream} instance
+     * @param encoding A character set encoding specifier
+     * 
+     * @throws UnsupportedEncodingException 
      ***/
-    public FromNetASCIIInputStream(InputStream input)
+    public FromNetASCIIInputStream(InputStream input, String encoding) throws UnsupportedEncodingException
     {
         super(input, _lineSeparatorBytes.length + 1);
+        _lineSeparatorBytes = _lineSeparator.getBytes(encoding); 
     }
-
-
+    
+    /**
+     * Creates a FromNetASCIIInputStream instance that wraps an existing
+     * InputStream.
+     * @param input An {@link InputStream} instance
+     * @throws UnsupportedEncodingException
+     */
+    public FromNetASCIIInputStream(InputStream input) throws UnsupportedEncodingException 
+    {
+    	this(input, Charset.defaultCharset().name()); 
+    }
+    
     private int __read() throws IOException
     {
         int ch;
