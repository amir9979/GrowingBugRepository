diff --git a/src/main/java/org/apache/maven/plugin/ear/output/AbstractFileNameMapping.java b/src/main/java/org/apache/maven/plugin/ear/output/AbstractFileNameMapping.java
deleted file mode 100644
index f1ca667..0000000
--- a/src/main/java/org/apache/maven/plugin/ear/output/AbstractFileNameMapping.java
+++ /dev/null
@@ -1,61 +0,0 @@
-package org.apache.maven.plugin.ear.output;
-
-import org.apache.maven.artifact.Artifact;
-
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *  http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied.  See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-
-/**
- * A base class used to generate the standard name of an
- * artifact instead of relying on the (potentially) wrong
- * file name provided by {@link org.apache.maven.artifact.Artifact#getFile()}.
- *
- * @author <a href="snicoll@apache.org">Stephane Nicoll</a>
- */
-public abstract class AbstractFileNameMapping
-    implements FileNameMapping
-{
-
-
-    /**
-     * Generates a standard file name for the specified {@link Artifact}.
-     * <p/>
-     * Returns something like <tt>artifactId-version[-classifier].extension</tt>.
-     *
-     * @param a the artifact to generate a filename from
-     * @return the filename, with a standard format
-     */
-    protected String generateFileName( final Artifact a )
-    {
-        final String extension = a.getArtifactHandler().getExtension();
-
-        final StringBuilder buffer = new StringBuilder( 128 );
-        buffer.append( a.getArtifactId() ).append( '-' ).append( a.getBaseVersion() );
-        if ( a.hasClassifier() )
-        {
-            buffer.append( '-' ).append( a.getClassifier() );
-        }
-        if ( extension != null && extension.length() > 0 )
-        {
-            buffer.append( '.' ).append( extension );
-        }
-
-        return buffer.toString();
-    }
-}
diff --git a/src/main/java/org/apache/maven/plugin/ear/output/FullFileNameMapping.java b/src/main/java/org/apache/maven/plugin/ear/output/FullFileNameMapping.java
index 9e71af4..09dfa91 100644
--- a/src/main/java/org/apache/maven/plugin/ear/output/FullFileNameMapping.java
+++ b/src/main/java/org/apache/maven/plugin/ear/output/FullFileNameMapping.java
@@ -29,12 +29,12 @@ import org.apache.maven.artifact.Artifact;
  * @version $Id$
  */
 public class FullFileNameMapping
-    extends AbstractFileNameMapping
+    implements FileNameMapping
 {
 
     public String mapFileName( final Artifact a )
     {
         final String dashedGroupId = a.getGroupId().replace( '.', '-' );
-        return dashedGroupId + "-" + generateFileName( a );
+        return dashedGroupId + "-" + a.getFile().getName();
     }
 }
diff --git a/src/main/java/org/apache/maven/plugin/ear/output/StandardFileNameMapping.java b/src/main/java/org/apache/maven/plugin/ear/output/StandardFileNameMapping.java
index dda0956..cd7054a 100644
--- a/src/main/java/org/apache/maven/plugin/ear/output/StandardFileNameMapping.java
+++ b/src/main/java/org/apache/maven/plugin/ear/output/StandardFileNameMapping.java
@@ -29,12 +29,11 @@ import org.apache.maven.artifact.Artifact;
  * @version $Id$
  */
 public class StandardFileNameMapping
-    extends AbstractFileNameMapping
+    implements FileNameMapping
 {
 
     public String mapFileName( final Artifact a )
     {
-        return generateFileName( a );
+        return a.getFile().getName();
     }
-
 }
