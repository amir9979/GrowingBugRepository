diff --git a/src/test/java/org/apache/commons/pool2/impl/TestGenericKeyedObjectPool.java b/src/test/java/org/apache/commons/pool2/impl/TestGenericKeyedObjectPool.java
index 7b5b5ac7..ae18c90c 100644
--- a/src/test/java/org/apache/commons/pool2/impl/TestGenericKeyedObjectPool.java
+++ b/src/test/java/org/apache/commons/pool2/impl/TestGenericKeyedObjectPool.java
@@ -2275,36 +2275,6 @@ public class TestGenericKeyedObjectPool extends TestKeyedObjectPool {
         Assert.assertFalse(testB._failed);
     }
 
-    // Pool-361
-    @Test
-    public void testValidateOnCreate() throws Exception {
-        gkoPool.setTestOnCreate(true);
-        simpleFactory.setValidationEnabled(true);
-        gkoPool.addObject("one");
-        Assert.assertEquals(1, simpleFactory.validateCounter);
-    }
-
-    @Test
-    public void testValidateOnCreateFailure() throws Exception {
-        gkoPool.setTestOnCreate(true);
-        gkoPool.setTestOnBorrow(false);
-        gkoPool.setMaxTotal(2);
-        simpleFactory.setValidationEnabled(true);
-        simpleFactory.setValid(false);
-        // Make sure failed validations do not leak capacity
-        gkoPool.addObject("one");
-        gkoPool.addObject("one");
-        assertEquals(0, gkoPool.getNumIdle());
-        assertEquals(0, gkoPool.getNumActive());
-        simpleFactory.setValid(true);
-        final String obj = gkoPool.borrowObject("one");
-        assertNotNull(obj);
-        gkoPool.addObject("one");
-        // Should have one idle, one out now
-        assertEquals(1, gkoPool.getNumIdle());
-        assertEquals(1, gkoPool.getNumActive());
-    }
-
 
     private static class DummyFactory
             extends BaseKeyedPooledObjectFactory<Object,Object> {
diff --git a/src/test/java/org/apache/commons/pool2/impl/TestGenericObjectPool.java b/src/test/java/org/apache/commons/pool2/impl/TestGenericObjectPool.java
index 27c81b26..d9be87f6 100644
--- a/src/test/java/org/apache/commons/pool2/impl/TestGenericObjectPool.java
+++ b/src/test/java/org/apache/commons/pool2/impl/TestGenericObjectPool.java
@@ -2839,34 +2839,6 @@ public class TestGenericObjectPool extends TestBaseObjectPool {
         Assert.assertEquals(1, simpleFactory.validateCounter);
     }
 
-    // Pool-361
-    @Test
-    public void testValidateOnCreate() throws Exception {
-        genericObjectPool.setTestOnCreate(true);
-        genericObjectPool.addObject();
-        Assert.assertEquals(1, simpleFactory.validateCounter);
-    }
-
-    @Test
-    public void testValidateOnCreateFailure() throws Exception {
-        genericObjectPool.setTestOnCreate(true);
-        genericObjectPool.setTestOnBorrow(false);
-        genericObjectPool.setMaxTotal(2);
-        simpleFactory.setValid(false);
-        // Make sure failed validations do not leak capacity
-        genericObjectPool.addObject();
-        genericObjectPool.addObject();
-        assertEquals(0, genericObjectPool.getNumIdle());
-        assertEquals(0, genericObjectPool.getNumActive());
-        simpleFactory.setValid(true);
-        final String obj = genericObjectPool.borrowObject();
-        assertNotNull(obj);
-        genericObjectPool.addObject();
-        // Should have one idle, one out now
-        assertEquals(1, genericObjectPool.getNumIdle());
-        assertEquals(1, genericObjectPool.getNumActive());
-	}
-
     @Test(timeout = 60000)
     public void testWhenExhaustedBlock() throws Exception {
         genericObjectPool.setMaxTotal(1);
